# Environment Variables Configuration

This document outlines all the environment variables required for the Bridgit-AI platform.

## Required API Keys

### AI Providers

| Variable | Description | Required | Example |
|----------|-------------|----------|---------|
| `OPENAI_API_KEY` | OpenAI API key for GPT models | Yes | `sk-proj-...` |
| `ANTHROPIC_API_KEY` | Anthropic API key for Claude models | Yes | `sk-ant-api03-...` |
| `GOOGLE_VERTEX_API_KEY` | Google Vertex AI API key | Yes | `AQ.Ab8RN6KT...` |
| `GROQ_API_KEY` | Groq API key for fast inference | Yes | `gsk_...` |

### Infrastructure

| Variable | Description | Required | Example |
|----------|-------------|----------|---------|
| `AI_GATEWAY_API_KEY` | Vercel AI Gateway API key | Yes | `vck_0foNGE9...` |
| `BLOB_READ_WRITE_TOKEN` | Vercel Blob storage token | Yes | `vercel_blob_rw_...` |

### Database (Supabase)

| Variable | Description | Required | Example |
|----------|-------------|----------|---------|
| `NEXT_PUBLIC_SUPABASE_URL` | Supabase project URL | Yes | `https://zdzcyztyvhczdgesvcwa.supabase.co` |
| `NEXT_PUBLIC_SUPABASE_ANON_KEY` | Supabase anonymous key | Yes | `eyJhbGciOiJIUzI1NiIs...` |
| `SUPABASE_SERVICE_ROLE_KEY` | Supabase service role key | Yes | `eyJhbGciOiJIUzI1NiIs...` |
| `SUPABASE_JWT_SECRET` | Supabase JWT secret | Yes | `SxjpCtf9a5UByj1l2LE4KAZAByeS1IZlBsJvQ/UudNXkTne6CP1pdcK9h5fOKOWoFjUIRvexXbsBZ76uS6FfNg==` |
| `POSTGRES_DATABASE` | PostgreSQL database name | Yes | `postgres` |
| `POSTGRES_HOST` | PostgreSQL host | Yes | `db.zdzcyztyvhczdgesvcwa.supabase.co` |
| `POSTGRES_PASSWORD` | PostgreSQL password | Yes | `W912pzYOJI4beghi` |
| `POSTGRES_PRISMA_URL` | Prisma database URL | Yes | `postgres://...` |
| `POSTGRES_URL` | PostgreSQL connection URL | Yes | `postgres://...` |
| `POSTGRES_URL_NON_POOLING` | Non-pooled PostgreSQL URL | Yes | `postgres://...` |
| `POSTGRES_USER` | PostgreSQL username | Yes | `postgres` |

### Additional Services

| Variable | Description | Required | Example |
|----------|-------------|----------|---------|
| `GOOGLE_FONTS_API_KEY` | Google Fonts API key | Optional | `AIzaSyD9faB1k0w_JfPE5CFfp5WWJe0GmQryf_g` |

## Setup Instructions

1. **Copy the template**:
   ```bash
   cp .env.local.example .env.local
   ```

2. **Fill in your API keys**:
   - Get OpenAI API key from [OpenAI Platform](https://platform.openai.com/api-keys)
   - Get Anthropic API key from [Anthropic Console](https://console.anthropic.com/)
   - Get Google Vertex AI key from [Google Cloud Console](https://console.cloud.google.com/)
   - Get Groq API key from [Groq Console](https://console.groq.com/)
   - Get Vercel AI Gateway key from [Vercel Dashboard](https://vercel.com/dashboard)
   - Get Vercel Blob token from [Vercel Dashboard](https://vercel.com/dashboard)
   - Setup Supabase project at [Supabase](https://supabase.com/)

3. **Verify setup**:
   ```bash
   # Check if all keys are set
   node -e "require('dotenv').config(); console.log('Keys loaded:', Object.keys(process.env).filter(k => k.includes('API') || k.includes('KEY')).length)"
   ```

## Security Notes

- Never commit `.env.local` to version control
- Use different API keys for development and production
- Rotate keys regularly
- Monitor API usage to avoid unexpected costs
- Use Vercel AI Gateway for cost optimization across providers

## Testing API Keys

You can test your API keys using the health check endpoint:

```bash
curl http://localhost:3000/api/ai
```

This will return the status of all configured AI providers.